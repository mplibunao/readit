name: cd_staging

defaults:
  run:
    shell: bash

on:
  issue_comment:
    types:
      - created
  workflow_dispatch:

env:
  REGISTRY: asia-southeast1-docker.pkg.dev
  IMAGE_TAG_PREFIX: asia-southeast1-docker.pkg.dev/prj-c-readit-cicd-725e/container-repo-c-readit
  DOCKERFILE: ./apps/api/Dockerfile
  COMPOSE_DOCKER_CLI_BUILD: 1
  DOCKER_BUILDKIT: 1
  APP_NAME: readit
  PNPM_VERSION: 7.14.1
  NODE_VERSION: 18.12.0
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
  TURBO_REMOTE_ONLY: true

jobs:
  cd:
    name: cd
    if: ${{ contains(github.event.comment.body, '/deploy') && github.event.issue.pull_request }}
    runs-on: ubuntu-latest
    permissions:
      # wif
      contents: read
      id-token: write
    steps:
      - name: Check command
        id: command
        uses: xt0rted/slash-command-action@v1.1.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          command: deploy
          reaction: 'true'
          reaction-type: 'rocket'
          permission-level: 'write'

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Auth GCP Service Account
        id: auth-gcp
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: '${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}'
          service_account: '${{ secrets.GCP_SERVICE_ACCOUNT }}'
          export_environment_variables: true
          create_credentials_file: true
          token_format: 'access_token'
          access_token_lifetime: '1200s'

      - name: Setup buildx
        uses: docker/setup-buildx-action@v2
        id: buildx

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            name=${{ env.IMAGE_TAG_PREFIX }},enable=true
            # Can add more here
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
          flavor: |
            latest=auto
            prefix=
            suffix=

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ env.DOCKERFILE }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          builder: ${{ steps.buildx.outputs.name }}
          target: production
          cache-from: type=registry,ref=${{ env.SERVICE_TAG }}:buildcache
          cache-to: type=registry,ref=${{ env.SERVICE_TAG }}:buildcache,mode=max
