name: ci

defaults:
  run:
    shell: bash

on:
  push:
    branches:
      - '**'
      - '!main'
      - '!master'
  workflow_dispatch:

env:
  COMPOSE_DOCKER_CLI_BUILD: 1
  DOCKER_BUILDKIT: 1
  APP_NAME: readit
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: mplibunao
  TURBO_REMOTE_ONLY: true

  API_HOST: 127.0.0.1
  DATABASE_URL: postgres://readit:postgres@localhost:5432/readit
  FRONTEND_URL: http://localhost:3000
  IS_PROD: false
  NODE_ENV: test
  PORT: 4000
  REDIS_URL: redis://:redis_password@localhost:6379
  TRPC_ENDPOINT: /trpc
  EDGE_CONFIG: ''
  VERCEL_ENV: development
  API_URL: http://localhost:4000/api
  NEXT_PUBLIC_API_URL: http://localhost:4000/api
  NEXT_TELEMETRY_DISABLED: 1
  REVALIDATE_TOKEN: de18b03be86939d7484c42856706c240bfc6c5ecb5fe837ee697867c2488e697
  SESSION_SECRET: e8a9bab1ff59ebb961527614fd03480808efff14ab4ae1f638dca2c2ad0d8dda
  SESSION_SECURE_COOKIE: false
  POSTMARK_API: notneeded
  GCP_PROJECT_ID: notneeded
  FROM_SUPPORT_EMAIL: hello@mplibunao.tech
  FROM_ALERTS_EMAIL: hello@mplibunao.tech
  API_SELF_URL: http://localhost:4000
  GCP_PUBLIC_ASSET_URL: https://storage.googleapis.com/readit-shared-public-assets
  OAUTH_GOOGLE_CLIENT_ID: ueuoeuoeu
  OAUTH_GOOGLE_CLIENT_SECRET: euouoetuhno
  OAUTH_FACEBOOK_CLIENT_ID: unoeuosauh
  OAUTH_FACEBOOK_CLIENT_SECRET: ueounoeuo
  OAUTH_DISCORD_CLIENT_ID: teuoneuoe
  OAUTH_DISCORD_CLIENT_SECRET: euououosuh
  OAUTH_BASE_REDIRECT_URL: http://localhost:4000/api/auth/oauth

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: 'package.json'

      - uses: pnpm/action-setup@v2.2.4
        name: Install pnpm
        id: pnpm-install
        with:
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >>$GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Run CI
        run: |
          docker-compose up -d
          pnpm ci
