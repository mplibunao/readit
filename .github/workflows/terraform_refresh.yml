name: terraform_refresh

defaults:
  run:
    shell: bash

on:
  issue_comment:
    types:
      - created
  workflow_dispatch:

env:
  TF_VERSION: ~1.3.4

jobs:
  command:
    if: ${{ contains(github.event.comment.body, '/terraform_refresh') && github.event.issue.pull_request }}
    runs-on: ubuntu-latest
    outputs:
      directory: ${{ steps.command.outputs.command-arguments }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check command
        id: command
        uses: xt0rted/slash-command-action@v2.0.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          command: terraform_refresh
          reaction: 'true'
          reaction-type: 'eyes'

  terraform_refresh:
    needs: command
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ needs.command.outputs.directory }}
    permissions:
      # Changes the permissions of github token
      # Required for google-github-actions/auth but may set other permissions to none
      # For info on how to configure this, refer to: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions
      # See https://docs.github.com/en/actions/security-guides/automatic-token-authentication#permissions-for-the-github_token for the default permissions
      contents: 'read'
      id-token: 'write'
      # Writing comments
      issues: 'write'
      pull-requests: 'write'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Auth GCP Service Account
        id: auth-gcp
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: '${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}'
          service_account: '${{ secrets.GCP_SERVICE_ACCOUNT }}'
          export_environment_variables: true
          create_credentials_file: true
          token_format: 'access_token'
          access_token_lifetime: '1200s'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform refresh
        id: refresh
        run: terraform refresh
        continue-on-error: true

      - name: Comment refresh
        uses: actions/github-script@v6
        env:
          REFRESH: '${{ steps.refresh.outputs.stdout }}'
          ERROR: '${{ steps.refresh.outputs.stderr }}'
          OUTCOME: ${{ steps.refresh.outcome }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { REFRESH, ERROR, OUTCOME } = process.env
            const output = `#### Terraform Refresh \`${{ steps.refresh.outcome }}\`

            <details><summary>Show ${OUTCOME === 'failure' ? 'Error' : 'Refresh'}</summary>

            \`\`\`hcl\n
            ${OUTCOME === 'failure' ? ERROR : REFRESH}
            \`\`\`

            </details>

            *Triggered by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      # Highlights whenever a refresh fails because the "Terraform Refresh" step continues on error.
      - name: Terraform Refresh Status
        if: steps.refresh.outcome == 'failure'
        run: exit 1
